//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from JPath.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace BuildXL.Execution.Analyzer.JPath {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="JPathParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IJPathListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>MapExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMapExpr([NotNull] JPathParser.MapExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MapExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMapExpr([NotNull] JPathParser.MapExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>RegExLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRegExLitExpr([NotNull] JPathParser.RegExLitExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>RegExLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRegExLitExpr([NotNull] JPathParser.RegExLitExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FilterExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilterExpr([NotNull] JPathParser.FilterExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FilterExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilterExpr([NotNull] JPathParser.FilterExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IntLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntLitExpr([NotNull] JPathParser.IntLitExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IntLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntLitExpr([NotNull] JPathParser.IntLitExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarExpr([NotNull] JPathParser.VarExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarExpr([NotNull] JPathParser.VarExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StrLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStrLitExpr([NotNull] JPathParser.StrLitExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StrLitExpr</c>
	/// labeled alternative in <see cref="JPathParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStrLitExpr([NotNull] JPathParser.StrLitExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JPathParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolOp([NotNull] JPathParser.BoolOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JPathParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolOp([NotNull] JPathParser.BoolOpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IndexFilter</c>
	/// labeled alternative in <see cref="JPathParser.filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexFilter([NotNull] JPathParser.IndexFilterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IndexFilter</c>
	/// labeled alternative in <see cref="JPathParser.filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexFilter([NotNull] JPathParser.IndexFilterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>RangeFilter</c>
	/// labeled alternative in <see cref="JPathParser.filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeFilter([NotNull] JPathParser.RangeFilterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>RangeFilter</c>
	/// labeled alternative in <see cref="JPathParser.filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeFilter([NotNull] JPathParser.RangeFilterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BoolFilter</c>
	/// labeled alternative in <see cref="JPathParser.filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolFilter([NotNull] JPathParser.BoolFilterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BoolFilter</c>
	/// labeled alternative in <see cref="JPathParser.filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolFilter([NotNull] JPathParser.BoolFilterContext context);
}
} // namespace BuildXL.Execution.Analyzer.JPath
